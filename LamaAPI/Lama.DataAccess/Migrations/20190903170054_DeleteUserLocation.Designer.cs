// <auto-generated />
using System;
using Lama.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lama.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190903170054_DeleteUserLocation")]
    partial class DeleteUserLocation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lama.Domain.DbModels.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CoverId");

                    b.Property<string>("SharedLink");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CoverId");

                    b.HasIndex("UserId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PhotoId");

                    b.Property<string>("Text")
                        .IsRequired();

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PhotoId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PhotoId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<bool>("IsRead");

                    b.Property<int>("SenderId");

                    b.Property<string>("Text")
                        .IsRequired();

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("SenderId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LocationId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("UserId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.PhotoAlbum", b =>
                {
                    b.Property<int>("PhotoId");

                    b.Property<int>("AlbumId");

                    b.HasKey("PhotoId", "AlbumId");

                    b.HasIndex("AlbumId");

                    b.ToTable("PhotoAlbums");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.PhotoState", b =>
                {
                    b.Property<int>("PhotoId");

                    b.Property<int>("Height");

                    b.Property<int>("RotateDegree");

                    b.Property<int>("Width");

                    b.HasKey("PhotoId");

                    b.ToTable("PhotoStates");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.SearchHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("SearchDate");

                    b.Property<string>("Text")
                        .IsRequired();

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SearchHistories");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.SharedAlbum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlbumId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("UserId");

                    b.ToTable("SharedAlbums");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.SharedPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PhotoId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("PhotoId");

                    b.HasIndex("UserId");

                    b.ToTable("SharedPhotos");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvatarUrl");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlobId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.VideoAlbum", b =>
                {
                    b.Property<int>("VideoId");

                    b.Property<int>("AlbumId");

                    b.HasKey("VideoId", "AlbumId");

                    b.HasIndex("AlbumId");

                    b.ToTable("VideoAlbums");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.Album", b =>
                {
                    b.HasOne("Lama.Domain.DbModels.Photo", "Photo")
                        .WithMany("Album")
                        .HasForeignKey("CoverId");

                    b.HasOne("Lama.Domain.DbModels.User", "User")
                        .WithMany("Albums")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.Category", b =>
                {
                    b.HasOne("Lama.Domain.DbModels.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Lama.Domain.DbModels.Comment", b =>
                {
                    b.HasOne("Lama.Domain.DbModels.Photo", "Photo")
                        .WithMany("Comments")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lama.Domain.DbModels.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.Favorite", b =>
                {
                    b.HasOne("Lama.Domain.DbModels.Photo", "Photo")
                        .WithMany("Favorites")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lama.Domain.DbModels.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.Like", b =>
                {
                    b.HasOne("Lama.Domain.DbModels.Photo", "Photo")
                        .WithMany("Likes")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lama.Domain.DbModels.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.Notification", b =>
                {
                    b.HasOne("Lama.Domain.DbModels.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lama.Domain.DbModels.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.Photo", b =>
                {
                    b.HasOne("Lama.Domain.DbModels.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("Lama.Domain.DbModels.User", "User")
                        .WithMany("Photos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Lama.Domain.DbModels.PhotoAlbum", b =>
                {
                    b.HasOne("Lama.Domain.DbModels.Album", "Album")
                        .WithMany("PhotoAlbums")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lama.Domain.DbModels.Photo", "Photo")
                        .WithMany("PhotoAlbums")
                        .HasForeignKey("PhotoId");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.PhotoState", b =>
                {
                    b.HasOne("Lama.Domain.DbModels.Photo", "Photo")
                        .WithOne("PhotoState")
                        .HasForeignKey("Lama.Domain.DbModels.PhotoState", "PhotoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Lama.Domain.DbModels.SearchHistory", b =>
                {
                    b.HasOne("Lama.Domain.DbModels.User", "User")
                        .WithMany("SearchHistories")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.SharedAlbum", b =>
                {
                    b.HasOne("Lama.Domain.DbModels.Album", "Album")
                        .WithMany("SharedAlbums")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lama.Domain.DbModels.User", "User")
                        .WithMany("SharedAlbums")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.SharedPhoto", b =>
                {
                    b.HasOne("Lama.Domain.DbModels.Photo", "Photo")
                        .WithMany("SharedPhotos")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lama.Domain.DbModels.User", "User")
                        .WithMany("SharedPhotos")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Lama.Domain.DbModels.Video", b =>
                {
                    b.HasOne("Lama.Domain.DbModels.User", "User")
                        .WithMany("Videos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Lama.Domain.DbModels.VideoAlbum", b =>
                {
                    b.HasOne("Lama.Domain.DbModels.Album", "Album")
                        .WithMany("VideoAlbums")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Lama.Domain.DbModels.Video", "Video")
                        .WithMany("VideoAlbums")
                        .HasForeignKey("VideoId");
                });
#pragma warning restore 612, 618
        }
    }
}
